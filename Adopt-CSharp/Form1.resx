<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gLwAAQkcjTT6oipST5L0ZcTCVmzUkixIe70yXmdN89Cn12hY1wGWuU3y/imgWv0cCDvOOjULXpNtrGr+
        leTrU3ULpEaFIvWum2AGSB7V4djgmf7zuaR191OVISbQRIC7SZj/AMbiNOT7UoOYngnt99yxGE91f4Kd
        sb/Loe7O7cLP6J4L7nfdkeH5v7tmoTj/ABu+GejwX3O+7/ny1qWWggAxafmr23Y8Y9HgrL7E/vci8oQY
        biUlH7EeKs8sv0zveOfngec7owd6iTfdIKRJLdG4mMREdL67HmytKeKn2X/G94J+djlSyLl88/ECuikN
        mlMSwLlXuBd3GgSIR1K8d9dinUrlS0mg8mgid9lipYElpBPLS0hwzmURlHpQVPO6FPDmZjnmvuMc0kPF
        xTY5Ac6gct55pImpsTPzrKoyKgBAsFCYoHAk0aIUU3KoUMI+tKBkLUBO987CCRdifvSwTWqq7BsekSgo
        rSSBIlBtLsCFtKGnyZL17TrwC8eqtg34CkQyQ808fS9DM6CbGQziPWhIcygvVtBrw7BWftXpdkl8tiuy
        hXtOvAAazcbIEdgpuuBhxSARw1KGaCYd1xWpln+KIKHVFHfReau2JrQeO8aLmYtZu1awwmo1LDoiWqQY
        6TGwRM5IpMhBcPn3yhZqEQ2WIn4gPYCgqT6Y4iyGVmjQgND/ANdn/9oADAMAAAERAhEAABD333333333
        33333333333333333333333Yg37330nb3333333333333330q/D332v6ff3333333333333335ozr33L
        1/73333333333333333/ANp2+99K99999999999999999o99Yl99299999999999999997q9zE099U39
        9999999999999HvT3aIb7L7X99999999999999VCn4iB6h9OY999999999999999dtp9F96pV9999999
        999999999999999dtd99999999999999999999999999999999999999999999999999999999999999
        99999999999999999999999999999999999999999999999999999999999999999999999999999999
        99999999999999999999999999999999999999999999999999999999999999999999999999999999
        99999999999999999999999999999999999999999999999999999999999999999999999999999999
        99999999999999999999999999999999999999999999999999999999999999999999999999999999
        9999999999999999999999999998888888888888888888888888/8QAKhEBAAIBAwIEBQUAAAAAAAAA
        AQARMRAhQUBhIHGxwTBQUYGRgKHR8PH/2gAIAQIRAT8Q+QAuIHv8g9YcWe/8kQZjwWLOF0TvXQrZVw/3
        vN2Vj/G/mFp8G/trecDd+0uD/IHqt8vD27RnfHQ0KipM/SI3ax4iFyM+2otOw0qpFtX2jtkehf7Prpm8
        OZbQpCFt4NjRbLn246L0Prrs/tZv+Tse+uHk6FFRCN7S3UeVzN6mDXHyRAL8ci3MALHnKGMQCyE4QKVx
        DAwCck2gLlUMV7HHQq2oxXCuUYvExZyQmg4jtyFQxCx0CAHjxGZu36zf/8QAIBEBAAICAwACAwAAAAAA
        AAAAAQARECExQEEgMFBhgP/aAAgBAREBPxD8DUq4/AIldHyXDiOQiyyJXQGpyXBqOy8mjGiLfR4OFTBT
        UC2orccDpcmdgw1bPnogsBbFiP17HujzPEiJz95VXFDUClAKtitgesB6RBfqUVVKoJHo6HOLYlEg23Eb
        GLi8BEYWqmwdBSV8iWL/ALN//8QAKxABAAEDAgUEAgMAAwAAAAAAAREAITFBURBhcYGRIFChscHRMEDw
        YKDh/9oACAEAAAE/EP8AmigKoBlaZDWQP1tQoCYG+TahAII4Rkf4cXWCnigKuEb20p6mxEK5exLBLYoz
        yIp8EI5QpjvBUlhDLo2zAWfmiOoovhkoaddlm6tMbNRoUEMSOGPP8AMFGAy35cVlk+l+wfmpdhEwEmD2
        KFdiS5lljVtFCKUBQkNcYqbvmZHmnbTNrN+CXxYPLD90VcFtoRceLPXHMGSTBv2URB13q3c/qnS9kZKA
        o3T0zQpoZAf9ttn2EwZ+UbPn7oYQLUAY6bccCLOoNazSzyA/bRSOdLDKPFvWpq6A0t/4HF/pZghejasE
        ilpDD+6R5kCQmF19gGgaASJSaQsiSOU4e9NXRFghqiWaISc4CUgEBEhN6KIWDmJxjGioZkCU1qJ2E9YM
        3bb2HEEmCRT0CpTTiEw7Cb0gMsEYssexEgYXvYSpeS9AlRPP3xBgMy7791KqIMbsHkw+lGWC7LFPXQpk
        lIS6cx134i4BdrIBDplpKUdzH2MyVd1H39DAEkgxuO5NRFgTceIYBqOgVLqyg76Oxfr6CqEpG7+CMVba
        IobSexmSv8+v0EWFdAbn6708gHsOZfpk4zwVLhkLfy281A6GTxdWfGO3owNBDqy/BQAQEBg9jMlL5Pv6
        VljvGIUPi7i8pHPEH5MvpcQa+yQZKfzff0qhK8A1/wAT2pjJLNqa9yGrk754avH3VrY7FJY7HtOgyUZg
        ksLm/wBCoAQl3aKKWE3GuZw2qXXekZ9s9ifkYK+PTbDrN49jAKv2hWlG4am8jWjpAVPVGJfQirRMws6m
        jFXAJNM1Xm1C/EiXbj8vq/ztuAC8E8hm51/vDFPK0CyF+gFPBxIOpQN5q8PXSixGkSRr/B28JmCJEx1m
        ltqF0STymptY0Y7HUoosJb+MFCwOsKY/FKiZ2PGjQwHsmq2amKjdw86XIKyutpRECCQQw80HZIiS8J+a
        MqZKsS61dYjBMc2vzoDLgF43/ugAkFcSb/NOkGKmVdeRWaJ8qd/uj6BCEjUFSDsrdTlTICkO5GtBedTY
        q6wleW9uAiAEm9AdYCWiH5yW8O3A+oQiVYfmTtp3GgdKiPSoc4IOBZv1twF0vs12aa6Sy3a+Z93sEFda
        nNYoIhErMg12FGk1BANmocpHWRkeDgBRI2rzFCkDESnV24jdiouRnxXyVf4ebwHPhDMVNeQXXWvmfd/e
        ng+QJ86ppSALOrTQUihmzNGUIQjqUkc71BsmpUKwt4FEZlijZNDooeOLh986fBAzp1c+dAlswcvfWo5E
        8udqQdXOs5GxXy1AIAJmBFQH7omh5BLrSrA18P74IyjgyIbJTlVdpB/vwMm5YvF43oGgoH4Hon0Y9ClQ
        tfFRGAWlwnPnhPs8Bxj0waHAmJKBqkAQHAI9ujn6I/7XH//Z
</value>
  </data>
</root>